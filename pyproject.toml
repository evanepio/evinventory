[project]
name = "evinventory"
version = "0.1.0"
description = "A simple Django app to record my stuff"
authors = [
    {name = "Evan Porter", email = "evan.porter@dotman.ca"},
]
dependencies = [
    "Django>=5.0.7",
    "django-environ>=0.11.2",
]
requires-python = "==3.12.*"
readme = "README.md"
license = {text = "MIT"}

[tool.pdm]
distribution = true # Needs to be true to have an 'editable' install

[tool.pdm.dev-dependencies]
test = [
    "pytest-django>=4.8.0",
    "coverage>=7.6.0",
    "django-coverage-plugin>=3.1.0",
]
lint = [
    "ruff>=0.5.5",
]

[tool.pdm.scripts]
manage.cmd = "python src/manage.py"
manage.env_file = ".env"
manage.help = "Runs the Django project management script"

server.cmd = "python src/manage.py runserver"
server.env_file = ".env"
server.help = "Runs the development server"

django-admin.shell = "cd src; django-admin"
django-admin.env_file = ".env"
django-admin.help = "Runs the Django Admin script"

generate-key.cmd = [
    "python", "src/manage.py", "shell", "-c",
    "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
]
generate-key.help = "Generates a secure, secret key"

test.cmd = "pytest"
test.env_file = ".env" # temporary until I split settings module
test.help = "Runs `pytest`"

lint.cmd = "ruff check ."
lint.help = "Runs `ruff` to check for format issues"

coverage-generate.cmd = "coverage run -m pytest"
coverage-generate.env_file = ".env" # temporary until I split settings module
coverage-generate.help = "Runs `coverage` to generate coverage data"

coverage-report.cmd = "coverage html"
coverage-report.env_file = ".env" # temporary until I split settings module
coverage-report.help = "Runs `coverage html` to generate an HTML report from coverage data"

coverage.composite = ['coverage-generate', 'coverage-report']
coverage.env_file = ".env" # temporary until I split settings module
coverage.help = "Runs runs tests and generates a coverage report"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "evinventory.settings" # temporary until I split settings module

[tool.ruff]
exclude = [
    ".git",
    "*/migrations/*",
    "*/settings/*",
    "*/static/CACHE/*",
    "docs",
]
line-length = 120

[tool.ruff.lint]
ignore = []
select = [ "E", "F", "W", "I", "N", ]

[tool.coverage.run]
include = ["src/*"]
omit = ["*migrations*", "*tests*"]
plugins = ["django_coverage_plugin"]